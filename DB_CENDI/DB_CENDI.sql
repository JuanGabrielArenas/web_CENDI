--USE MASTER;
--DROP DATABASE BDCENDI;
CREATE DATABASE BDCENDI;
GO
USE BDCENDI;
GO

CREATE TABLE TBL_TEMAS(
INT_COD_TEMA INT NOT NULL PRIMARY KEY,
STR_NOMBRE_TEMA VARCHAR(40) NOT NULL,
STR_CONTENIDO_TEMA VARCHAR(60) NOT NULL,
);
GO

CREATE TABLE TBL_CURSOS(
INT_COD_CURSO INT NOT NULL PRIMARY KEY,
STR_TITULO VARCHAR(30) NOT NULL,
INT_NUMERO_HORAS INT NOT NULL
);
GO

CREATE TABLE TBL_CURSOS_TEMAS(
INT_COD_CURSO INT NOT NULL FOREIGN KEY REFERENCES TBL_CURSOS(INT_COD_CURSO),
INT_COD_TEMA INT NOT NULL FOREIGN KEY REFERENCES TBL_TEMAS(INT_COD_TEMA),
CONSTRAINT PK_TBL_CURSOS_TEMAS PRIMARY KEY (INT_COD_CURSO, INT_COD_TEMA)
);
GO

CREATE TABLE TBL_TIPO_DOC(
INT_COD_DOCUMENTO INT NOT NULL PRIMARY KEY,
STR_TIPO_DOC VARCHAR(2)
);
GO

CREATE TABLE TBL_EMPLEADOS(
INT_ID_EMPLEADO INT NOT NULL PRIMARY KEY,
INT_COD_EMPLEADO INT FOREIGN KEY REFERENCES TBL_EMPLEADOS(INT_ID_EMPLEADO),
INT_COD_TIPO_DOC INT FOREIGN KEY REFERENCES TBL_TIPO_DOC(INT_COD_DOCUMENTO),
STR_NOMBRE VARCHAR(30) NOT NULL,
INT_CEDULA BIGINT NOT NULL,
DTE_FECHA_NACIMIENTO DATETIME NOT NULL
);
GO

CREATE TABLE TBL_USUARIO(
INT_COD_EMPLEADO INT NOT NULL PRIMARY KEY,
INT_ID_EMPLEADO INT FOREIGN KEY REFERENCES TBL_EMPLEADOS(INT_ID_EMPLEADO),
INT_CLAVE_ACCESO INT NOT NULL,
STR_NOMBRE VARCHAR(40) NOT NULL,
INT_NUMERO_DOCUMENTO INT NOT NULL
);
GO

CREATE TABLE TBL_DIRECCIONES(
INT_COD_DIRECCION INT NOT NULL PRIMARY KEY,
STR_DIRECCION VARCHAR(50)
);
GO

CREATE TABLE TBL_CIUDADES (
INT_ID_TELEFONO INT NOT NULL PRIMARY KEY CONSTRAINT FK_INT_ID_DIRECCION 
	FOREIGN KEY REFERENCES TBL_DIRECCIONES(INT_COD_DIRECCION),
STR_CIUDAD VARCHAR(30)
);
GO

CREATE TABLE TBL_TELEFONOS(
INT_COD_TELEFONO INT NOT NULL PRIMARY KEY,
INT_NUMERO_TELEFONO INT
);
GO

CREATE TABLE TBL_TIPO_TELEFONO (
INT_ID_TELEFONO INT NOT NULL PRIMARY KEY CONSTRAINT FK_INT_ID_TELEFONO 
	FOREIGN KEY REFERENCES TBL_TELEFONOS(INT_COD_TELEFONO),
STR_TIPO_TELEFONO VARCHAR(30)
);
GO

CREATE TABLE TBL_PROFESORES(
INT_ID_PROFESOR INT NOT NULL PRIMARY KEY,
INT_COD_EMPLEADO INT FOREIGN KEY REFERENCES TBL_EMPLEADOS(INT_ID_EMPLEADO),
INT_COD_TIPO_DOC INT FOREIGN KEY REFERENCES TBL_TIPO_DOC(INT_COD_DOCUMENTO),
INT_COD_TELEFONO INT  FOREIGN KEY REFERENCES TBL_TELEFONOS(INT_COD_TELEFONO),
INT_COD_CIUDAD INT FOREIGN KEY REFERENCES TBL_DIRECCIONES(INT_COD_DIRECCION),
DTE_FECHA_INGRESO DATETIME NOT NULL
);
GO

CREATE TABLE TBL_TITULO_ACADEMICO(
INT_COD_TITULO INT NOT NULL PRIMARY KEY,
STR_NOMBRE VARCHAR(50) NOT NULL,
STR_DESCRIPCION VARCHAR(100)
);
GO

CREATE TABLE TBL_PROFESOR_TITULO(
INT_COD_PROFESOR INT NOT NULL FOREIGN KEY REFERENCES TBL_PROFESORES(INT_ID_PROFESOR),
INT_COD_TITULO INT NOT NULL FOREIGN KEY REFERENCES TBL_TITULO_ACADEMICO(INT_COD_TITULO),
PRIMARY KEY (INT_COD_PROFESOR, INT_COD_TITULO)
);
GO

CREATE TABLE TBL_ESTUDIANTES(
INT_ID_ESTUDIANTE INT NOT NULL PRIMARY KEY,
INT_ID_EMPLEADO INT FOREIGN KEY REFERENCES TBL_EMPLEADOS(INT_ID_EMPLEADO),
INT_COD_TIPO_DOC INT FOREIGN KEY REFERENCES TBL_TIPO_DOC(INT_COD_DOCUMENTO),
INT_COD_TELEFONO INT FOREIGN KEY REFERENCES TBL_TELEFONOS(INT_COD_TELEFONO),
INT_COD_CIUDAD INT FOREIGN KEY REFERENCES TBL_DIRECCIONES(INT_COD_DIRECCION),
STR_NOMBRE VARCHAR(40) NOT NULL,
INT_NUMERO_DOCUMENTO BIGINT NOT NULL
);
GO

CREATE TABLE TBL_FORMA_PAGO(
INT_COD_FORMA_PAGO INT NOT NULL PRIMARY KEY,
INT_ID_EMPLEADO INT FOREIGN KEY REFERENCES TBL_EMPLEADOS(INT_ID_EMPLEADO),
STR_DESCRIPCION VARCHAR(40) NOT NULL,
BOL_ACTIVO BIT NOT NULL
);
GO

CREATE TABLE TBL_INSCRIPCIONES(
INT_COD_INSCRIPCION INT NOT NULL PRIMARY KEY,
INT_ID_EMPLEADO INT FOREIGN KEY REFERENCES TBL_EMPLEADOS(INT_ID_EMPLEADO),
INT_ID_ESTUDIANTE INT NOT NULL FOREIGN KEY REFERENCES TBL_ESTUDIANTES(INT_ID_ESTUDIANTE),
INT_COD_EDICION INT,
FLT_VALOR_PAGO MONEY NOT NULL,
INT_CANTIDAD INT
);
GO

CREATE TABLE TBL_INSCRIPCION_FORMA_PAGO(
INT_COD_INSCRIPCION INT NOT NULL FOREIGN KEY REFERENCES TBL_INSCRIPCIONES(INT_COD_INSCRIPCION),
INT_COD_FORMA_PAGO INT NOT NULL FOREIGN KEY REFERENCES TBL_FORMA_PAGO(INT_COD_FORMA_PAGO),
CONSTRAINT PK_TBL_INSCRIPCION_FORMA_PAGO PRIMARY KEY (INT_COD_INSCRIPCION, INT_COD_FORMA_PAGO)
);
GO

CREATE TABLE TBL_DETALLE_INSCRIPCION(
INT_COD_DETALLE_INSCRIPCION INT NOT NULL PRIMARY KEY,
INT_COD_INSCRIPCION INT FOREIGN KEY REFERENCES TBL_INSCRIPCIONES(INT_COD_INSCRIPCION),
FLT_VALOR MONEY NOT NULL,
INT_CANTIDAD INT
);
GO

CREATE TABLE TBL_HORARIOS(
INT_COD_HORARIO INT NOT NULL PRIMARY KEY,
DTE_HORA_INICIO TIME NOT NULL,
DTE_HORA_FIN TIME NOT NULL
);
GO

CREATE TABLE TBL_DIAS(
INT_COD_DIA INT NOT NULL PRIMARY KEY,
STR_DIA VARCHAR(12) NOT NULL
);
GO

CREATE TABLE TBL_EDICION_CURSOS(
INT_COD_EDICION INT NOT NULL PRIMARY KEY,
INT_COD_CURSO INT FOREIGN KEY REFERENCES TBL_CURSOS(INT_COD_CURSO),
INT_COD_DETALLE_INSCRIPCION INT FOREIGN KEY REFERENCES TBL_DETALLE_INSCRIPCION(INT_COD_DETALLE_INSCRIPCION),
INT_ID_PROFESOR INT FOREIGN KEY REFERENCES TBL_PROFESORES(INT_ID_PROFESOR),
INT_ID_EMPLEADO INT FOREIGN KEY REFERENCES TBL_EMPLEADOS(INT_ID_EMPLEADO),
INT_COD_HORARIO INT FOREIGN KEY REFERENCES TBL_HORARIOS(INT_COD_HORARIO),
INT_COD_DIA INT FOREIGN KEY REFERENCES TBL_DIAS(INT_COD_DIA),
DTE_FECHA_INICIO DATETIME NOT NULL,
DTE_FECHA_FINAL DATETIME NOT NULL,
FLT_VALOR MONEY NOT NULL
);
GO

ALTER TABLE TBL_INSCRIPCIONES ADD FOREIGN KEY (INT_COD_EDICION) REFERENCES TBL_EDICION_CURSOS(INT_COD_EDICION);
GO

--//////////////////////////////////////////////////////////////////////////////////////////

INSERT INTO TBL_CURSOS (INT_COD_CURSO, STR_TITULO, INT_NUMERO_HORAS) VALUES (1, 'Desarrollo Web', 120);
INSERT INTO TBL_CURSOS (INT_COD_CURSO, STR_TITULO, INT_NUMERO_HORAS) VALUES (2, 'Programación Java', 150);
INSERT INTO TBL_CURSOS (INT_COD_CURSO, STR_TITULO, INT_NUMERO_HORAS) VALUES (3, 'Diseño Gráfico', 90);
INSERT INTO TBL_CURSOS (INT_COD_CURSO, STR_TITULO, INT_NUMERO_HORAS) VALUES (4, 'Marketing Digital', 80);
INSERT INTO TBL_CURSOS (INT_COD_CURSO, STR_TITULO, INT_NUMERO_HORAS) VALUES (5, 'Gestión de Proyectos', 100);
INSERT INTO TBL_CURSOS (INT_COD_CURSO, STR_TITULO, INT_NUMERO_HORAS) VALUES (6, 'Redes y Comunicaciones', 110);
INSERT INTO TBL_CURSOS (INT_COD_CURSO, STR_TITULO, INT_NUMERO_HORAS) VALUES (7, 'Seguridad Informática', 130);
INSERT INTO TBL_CURSOS (INT_COD_CURSO, STR_TITULO, INT_NUMERO_HORAS) VALUES (8, 'Administración de Empresas', 90);
INSERT INTO TBL_CURSOS (INT_COD_CURSO, STR_TITULO, INT_NUMERO_HORAS) VALUES (9, 'Inglés para Negocios', 60);
INSERT INTO TBL_CURSOS (INT_COD_CURSO, STR_TITULO, INT_NUMERO_HORAS) VALUES (10, 'Contabilidad Financiera', 80);
INSERT INTO TBL_CURSOS (INT_COD_CURSO, STR_TITULO, INT_NUMERO_HORAS) VALUES (11, 'Recursos Humanos', 70);
INSERT INTO TBL_CURSOS (INT_COD_CURSO, STR_TITULO, INT_NUMERO_HORAS) VALUES (12, 'Ventas y Negociación', 100);
INSERT INTO TBL_CURSOS (INT_COD_CURSO, STR_TITULO, INT_NUMERO_HORAS) VALUES (13, 'Desarrollo de Apps Móviles', 120);
INSERT INTO TBL_CURSOS (INT_COD_CURSO, STR_TITULO, INT_NUMERO_HORAS) VALUES (14, 'Gestión de Calidad', 80);
INSERT INTO TBL_CURSOS (INT_COD_CURSO, STR_TITULO, INT_NUMERO_HORAS) VALUES (15, 'Marketing Digital Avanzado', 110);
INSERT INTO TBL_CURSOS (INT_COD_CURSO, STR_TITULO, INT_NUMERO_HORAS) VALUES (16, 'Diseño de Interiores', 90);
INSERT INTO TBL_CURSOS (INT_COD_CURSO, STR_TITULO, INT_NUMERO_HORAS) VALUES (17, 'Programación Python', 130);
INSERT INTO TBL_CURSOS (INT_COD_CURSO, STR_TITULO, INT_NUMERO_HORAS) VALUES (18, 'Finanzas Corporativas', 100);
INSERT INTO TBL_CURSOS (INT_COD_CURSO, STR_TITULO, INT_NUMERO_HORAS) VALUES (19, 'Marketing en Redes Sociales', 80);
SELECT * FROM TBL_CURSOS;
GO

INSERT INTO TBL_TEMAS (INT_COD_TEMA, STR_NOMBRE_TEMA, STR_CONTENIDO_TEMA) VALUES (1, 'Introducción al Desarrollo Web', 'Contenido del tema de introducción al desarrollo web');
INSERT INTO TBL_TEMAS (INT_COD_TEMA, STR_NOMBRE_TEMA, STR_CONTENIDO_TEMA) VALUES (2, 'HTML y CSS', 'Contenido del tema de HTML y CSS');
INSERT INTO TBL_TEMAS (INT_COD_TEMA, STR_NOMBRE_TEMA, STR_CONTENIDO_TEMA) VALUES (3, 'JavaScript', 'Contenido del tema de JavaScript');
INSERT INTO TBL_TEMAS (INT_COD_TEMA, STR_NOMBRE_TEMA, STR_CONTENIDO_TEMA) VALUES (4, 'Frameworks de Desarrollo Web', 'Contenido del tema de frameworks de desarrollo web');
INSERT INTO TBL_TEMAS (INT_COD_TEMA, STR_NOMBRE_TEMA, STR_CONTENIDO_TEMA) VALUES (5, 'Introducción a la Programación Java', 'Contenido del tema de introducción a la programación Java');
INSERT INTO TBL_TEMAS (INT_COD_TEMA, STR_NOMBRE_TEMA, STR_CONTENIDO_TEMA) VALUES (6, 'Programación Orientada a Objetos', 'Contenido del tema de programación orientada a objetos');
INSERT INTO TBL_TEMAS (INT_COD_TEMA, STR_NOMBRE_TEMA, STR_CONTENIDO_TEMA) VALUES (7, 'APIs y Librerías en Java', 'Contenido del tema de APIs y librerías en Java');
INSERT INTO TBL_TEMAS (INT_COD_TEMA, STR_NOMBRE_TEMA, STR_CONTENIDO_TEMA) VALUES (8, 'Diseño Gráfico Básico', 'Contenido del tema de diseño gráfico básico');
INSERT INTO TBL_TEMAS (INT_COD_TEMA, STR_NOMBRE_TEMA, STR_CONTENIDO_TEMA) VALUES (9, 'Herramientas de Diseño Gráfico', 'Contenido del tema de herramientas de diseño gráfico');
INSERT INTO TBL_TEMAS (INT_COD_TEMA, STR_NOMBRE_TEMA, STR_CONTENIDO_TEMA) VALUES (10, 'Diseño de Logos', 'Contenido del tema de diseño de logos');
INSERT INTO TBL_TEMAS (INT_COD_TEMA, STR_NOMBRE_TEMA, STR_CONTENIDO_TEMA) VALUES (11, 'Introducción al Marketing Digital', 'Contenido del tema de introducción al marketing digital');
INSERT INTO TBL_TEMAS (INT_COD_TEMA, STR_NOMBRE_TEMA, STR_CONTENIDO_TEMA) VALUES (12, 'Estrategias de Marketing en Redes', 'Contenido del tema de estrategias de marketing en redes');
INSERT INTO TBL_TEMAS (INT_COD_TEMA, STR_NOMBRE_TEMA, STR_CONTENIDO_TEMA) VALUES (13, 'Gestión de Proyectos de Marketing', 'Contenido del tema de gestión de proyectos de marketing');
INSERT INTO TBL_TEMAS (INT_COD_TEMA, STR_NOMBRE_TEMA, STR_CONTENIDO_TEMA) VALUES (14, 'Principios de Networking', 'Contenido del tema de principios de networking');
SELECT * FROM TBL_TEMAS;
GO

INSERT INTO TBL_CURSOS_TEMAS (INT_COD_CURSO, INT_COD_TEMA) VALUES (1, 1);
INSERT INTO TBL_CURSOS_TEMAS (INT_COD_CURSO, INT_COD_TEMA) VALUES (1, 2);
INSERT INTO TBL_CURSOS_TEMAS (INT_COD_CURSO, INT_COD_TEMA) VALUES (1, 3);
INSERT INTO TBL_CURSOS_TEMAS (INT_COD_CURSO, INT_COD_TEMA) VALUES (2, 5);
INSERT INTO TBL_CURSOS_TEMAS (INT_COD_CURSO, INT_COD_TEMA) VALUES (2, 6);
INSERT INTO TBL_CURSOS_TEMAS (INT_COD_CURSO, INT_COD_TEMA) VALUES (2, 7);
INSERT INTO TBL_CURSOS_TEMAS (INT_COD_CURSO, INT_COD_TEMA) VALUES (3, 8);
INSERT INTO TBL_CURSOS_TEMAS (INT_COD_CURSO, INT_COD_TEMA) VALUES (3, 9);
INSERT INTO TBL_CURSOS_TEMAS (INT_COD_CURSO, INT_COD_TEMA) VALUES (3, 10);
INSERT INTO TBL_CURSOS_TEMAS (INT_COD_CURSO, INT_COD_TEMA) VALUES (4, 11);
INSERT INTO TBL_CURSOS_TEMAS (INT_COD_CURSO, INT_COD_TEMA) VALUES (4, 13);
INSERT INTO TBL_CURSOS_TEMAS (INT_COD_CURSO, INT_COD_TEMA) VALUES (5, 14);
INSERT INTO TBL_CURSOS_TEMAS (INT_COD_CURSO, INT_COD_TEMA) VALUES (5, 6);
INSERT INTO TBL_CURSOS_TEMAS (INT_COD_CURSO, INT_COD_TEMA) VALUES (6, 1);
INSERT INTO TBL_CURSOS_TEMAS (INT_COD_CURSO, INT_COD_TEMA) VALUES (6, 3);
INSERT INTO TBL_CURSOS_TEMAS (INT_COD_CURSO, INT_COD_TEMA) VALUES (7, 7);
INSERT INTO TBL_CURSOS_TEMAS (INT_COD_CURSO, INT_COD_TEMA) VALUES (8, 4);
INSERT INTO TBL_CURSOS_TEMAS (INT_COD_CURSO, INT_COD_TEMA) VALUES (8, 5);
INSERT INTO TBL_CURSOS_TEMAS (INT_COD_CURSO, INT_COD_TEMA) VALUES (9, 9);
INSERT INTO TBL_CURSOS_TEMAS (INT_COD_CURSO, INT_COD_TEMA) VALUES (9, 11);
INSERT INTO TBL_CURSOS_TEMAS (INT_COD_CURSO, INT_COD_TEMA) VALUES (10, 13);
INSERT INTO TBL_CURSOS_TEMAS (INT_COD_CURSO, INT_COD_TEMA) VALUES (10, 14);
SELECT * FROM TBL_CURSOS_TEMAS;
GO

INSERT INTO TBL_HORARIOS (INT_COD_HORARIO, DTE_HORA_INICIO, DTE_HORA_FIN) VALUES (1, '06:00', '08:00');
INSERT INTO TBL_HORARIOS (INT_COD_HORARIO, DTE_HORA_INICIO, DTE_HORA_FIN) VALUES (2, '08:00', '10:00');
INSERT INTO TBL_HORARIOS (INT_COD_HORARIO, DTE_HORA_INICIO, DTE_HORA_FIN) VALUES (3, '10:00', '12:00');
INSERT INTO TBL_HORARIOS (INT_COD_HORARIO, DTE_HORA_INICIO, DTE_HORA_FIN) VALUES (4, '12:00', '14:00');
INSERT INTO TBL_HORARIOS (INT_COD_HORARIO, DTE_HORA_INICIO, DTE_HORA_FIN) VALUES (5, '14:00', '16:00');
INSERT INTO TBL_HORARIOS (INT_COD_HORARIO, DTE_HORA_INICIO, DTE_HORA_FIN) VALUES (6, '16:00', '18:00');
INSERT INTO TBL_HORARIOS (INT_COD_HORARIO, DTE_HORA_INICIO, DTE_HORA_FIN) VALUES (7, '18:00', '20:00');
SELECT * FROM TBL_HORARIOS;
GO

INSERT INTO TBL_TITULO_ACADEMICO (INT_COD_TITULO, STR_NOMBRE, STR_DESCRIPCION) VALUES (1, 'Licenciatura en Administración de Empresas', 'Título universitario en el campo de la administración de empresas.');
INSERT INTO TBL_TITULO_ACADEMICO (INT_COD_TITULO, STR_NOMBRE, STR_DESCRIPCION) VALUES (2, 'Ingeniería Informática', 'Título universitario en el campo de la ingeniería de software y sistemas informáticos.');
INSERT INTO TBL_TITULO_ACADEMICO (INT_COD_TITULO, STR_NOMBRE, STR_DESCRIPCION) VALUES (3, 'Técnico en Contabilidad', 'Título técnico en el área de la contabilidad y finanzas.');
INSERT INTO TBL_TITULO_ACADEMICO (INT_COD_TITULO, STR_NOMBRE, STR_DESCRIPCION) VALUES (4, 'Maestría en Marketing', 'Título de posgrado en el campo del marketing y la gestión comercial.');
INSERT INTO TBL_TITULO_ACADEMICO (INT_COD_TITULO, STR_NOMBRE, STR_DESCRIPCION) VALUES (5, 'Técnico en Diseño Gráfico', 'Título técnico en el área del diseño gráfico y la comunicación visual.');
INSERT INTO TBL_TITULO_ACADEMICO (INT_COD_TITULO, STR_NOMBRE, STR_DESCRIPCION) VALUES (6, 'Licenciatura en Derecho', 'Título universitario en el campo del derecho y la legislación.');
INSERT INTO TBL_TITULO_ACADEMICO (INT_COD_TITULO, STR_NOMBRE, STR_DESCRIPCION) VALUES (7, 'Ingeniería Civil', 'Título universitario en el campo de la ingeniería civil y la construcción.');
INSERT INTO TBL_TITULO_ACADEMICO (INT_COD_TITULO, STR_NOMBRE, STR_DESCRIPCION) VALUES (8, 'Técnico en Enfermería', 'Título técnico en el área de la enfermería y cuidado de pacientes.');
INSERT INTO TBL_TITULO_ACADEMICO (INT_COD_TITULO, STR_NOMBRE, STR_DESCRIPCION) VALUES (9, 'Maestría en Finanzas', 'Título de posgrado en el campo de las finanzas y la gestión económica.');
INSERT INTO TBL_TITULO_ACADEMICO (INT_COD_TITULO, STR_NOMBRE, STR_DESCRIPCION) VALUES (10, 'Técnico en Electricidad', 'Título técnico en el área de la electricidad y los sistemas eléctricos.');
INSERT INTO TBL_TITULO_ACADEMICO (INT_COD_TITULO, STR_NOMBRE, STR_DESCRIPCION) VALUES (11, 'Licenciatura en Psicología', 'Título universitario en el campo de la psicología y el estudio del comportamiento humano.');
INSERT INTO TBL_TITULO_ACADEMICO (INT_COD_TITULO, STR_NOMBRE, STR_DESCRIPCION) VALUES (12, 'Ingeniería Industrial', 'Título universitario en el campo de la ingeniería industrial y la optimización de procesos.');
INSERT INTO TBL_TITULO_ACADEMICO (INT_COD_TITULO, STR_NOMBRE, STR_DESCRIPCION) VALUES (13, 'Técnico en Mecánica Automotriz', 'Título técnico en el área de la mecánica de vehículos y reparación automotriz.');
INSERT INTO TBL_TITULO_ACADEMICO (INT_COD_TITULO, STR_NOMBRE, STR_DESCRIPCION) VALUES (14, 'Maestría en Recursos Humanos', 'Título de posgrado en el campo de la gestión de recursos humanos y el talento empresarial.');
INSERT INTO TBL_TITULO_ACADEMICO (INT_COD_TITULO, STR_NOMBRE, STR_DESCRIPCION) VALUES (15, 'Técnico en Gastronomía', 'Título técnico en el área de la gastronomía y las técnicas culinarias.');
INSERT INTO TBL_TITULO_ACADEMICO (INT_COD_TITULO, STR_NOMBRE, STR_DESCRIPCION) VALUES (16, 'Licenciatura en Arquitectura', 'Título universitario en el campo de la arquitectura y el diseño de edificaciones.');
INSERT INTO TBL_TITULO_ACADEMICO (INT_COD_TITULO, STR_NOMBRE, STR_DESCRIPCION) VALUES (17, 'Ingeniería Química', 'Título universitario en el campo de la ingeniería química y los procesos industriales.');
INSERT INTO TBL_TITULO_ACADEMICO (INT_COD_TITULO, STR_NOMBRE, STR_DESCRIPCION) VALUES (18, 'Técnico en Programación de Software', 'Título técnico en el área de la programación y el desarrollo de software.');
INSERT INTO TBL_TITULO_ACADEMICO (INT_COD_TITULO, STR_NOMBRE, STR_DESCRIPCION) VALUES (19, 'Maestría en Administración de Proyectos', 'Título de posgrado en el campo de la gestión de proyectos y la planificación estratégica.');
INSERT INTO TBL_TITULO_ACADEMICO (INT_COD_TITULO, STR_NOMBRE, STR_DESCRIPCION) VALUES (20, 'Técnico en Marketing Digital', 'Título técnico en el área del marketing digital y las estrategias de publicidad en línea.');
SELECT * FROM TBL_TITULO_ACADEMICO;
GO

INSERT INTO TBL_PROFESORES (INT_ID_PROFESOR, DTE_FECHA_INGRESO) VALUES (1, '2022-01-05');
INSERT INTO TBL_PROFESORES (INT_ID_PROFESOR, DTE_FECHA_INGRESO) VALUES (2, '2021-09-15');
INSERT INTO TBL_PROFESORES (INT_ID_PROFESOR, DTE_FECHA_INGRESO) VALUES (3, '2022-03-10');
INSERT INTO TBL_PROFESORES (INT_ID_PROFESOR, DTE_FECHA_INGRESO) VALUES (4, '2022-05-20');
INSERT INTO TBL_PROFESORES (INT_ID_PROFESOR, DTE_FECHA_INGRESO) VALUES (5, '2021-11-30');
INSERT INTO TBL_PROFESORES (INT_ID_PROFESOR, DTE_FECHA_INGRESO) VALUES (6, '2022-02-08');
INSERT INTO TBL_PROFESORES (INT_ID_PROFESOR, DTE_FECHA_INGRESO) VALUES (7, '2022-04-25');
INSERT INTO TBL_PROFESORES (INT_ID_PROFESOR, DTE_FECHA_INGRESO) VALUES (8, '2021-10-12');
INSERT INTO TBL_PROFESORES (INT_ID_PROFESOR, DTE_FECHA_INGRESO) VALUES (9, '2022-03-01');
INSERT INTO TBL_PROFESORES (INT_ID_PROFESOR, DTE_FECHA_INGRESO) VALUES (10, '2022-06-18');
INSERT INTO TBL_PROFESORES (INT_ID_PROFESOR, DTE_FECHA_INGRESO) VALUES (11, '2021-12-08');
INSERT INTO TBL_PROFESORES (INT_ID_PROFESOR, DTE_FECHA_INGRESO) VALUES (12, '2022-02-22');
INSERT INTO TBL_PROFESORES (INT_ID_PROFESOR, DTE_FECHA_INGRESO) VALUES (13, '2022-05-03');
INSERT INTO TBL_PROFESORES (INT_ID_PROFESOR, DTE_FECHA_INGRESO) VALUES (14, '2022-01-15');
INSERT INTO TBL_PROFESORES (INT_ID_PROFESOR, DTE_FECHA_INGRESO) VALUES (15, '2021-10-25');
INSERT INTO TBL_PROFESORES (INT_ID_PROFESOR, DTE_FECHA_INGRESO) VALUES (16, '2022-03-18');
INSERT INTO TBL_PROFESORES (INT_ID_PROFESOR, DTE_FECHA_INGRESO) VALUES (17, '2022-05-08');
INSERT INTO TBL_PROFESORES (INT_ID_PROFESOR, DTE_FECHA_INGRESO) VALUES (18, '2021-11-18');
INSERT INTO TBL_PROFESORES (INT_ID_PROFESOR, DTE_FECHA_INGRESO) VALUES (19, '2022-02-28');
INSERT INTO TBL_PROFESORES (INT_ID_PROFESOR, DTE_FECHA_INGRESO) VALUES (20, '2022-06-10');
INSERT INTO TBL_PROFESORES (INT_ID_PROFESOR, DTE_FECHA_INGRESO) VALUES (21, '2021-12-30');
INSERT INTO TBL_PROFESORES (INT_ID_PROFESOR, DTE_FECHA_INGRESO) VALUES (22, '2022-03-08');
INSERT INTO TBL_PROFESORES (INT_ID_PROFESOR, DTE_FECHA_INGRESO) VALUES (23, '2022-05-15');
INSERT INTO TBL_PROFESORES (INT_ID_PROFESOR, DTE_FECHA_INGRESO) VALUES (24, '2022-01-25');
INSERT INTO TBL_PROFESORES (INT_ID_PROFESOR, DTE_FECHA_INGRESO) VALUES (25, '2021-10-05');
INSERT INTO TBL_PROFESORES (INT_ID_PROFESOR, DTE_FECHA_INGRESO) VALUES (26, '2022-02-15');
INSERT INTO TBL_PROFESORES (INT_ID_PROFESOR, DTE_FECHA_INGRESO) VALUES (27, '2022-04-30');
INSERT INTO TBL_PROFESORES (INT_ID_PROFESOR, DTE_FECHA_INGRESO) VALUES (28, '2021-11-10');
INSERT INTO TBL_PROFESORES (INT_ID_PROFESOR, DTE_FECHA_INGRESO) VALUES (29, '2022-03-25');
INSERT INTO TBL_PROFESORES (INT_ID_PROFESOR, DTE_FECHA_INGRESO) VALUES (30, '2022-06-05');
SELECT * FROM TBL_PROFESORES;
GO

INSERT INTO TBL_PROFESOR_TITULO (INT_COD_PROFESOR, INT_COD_TITULO) VALUES (1, 1);
INSERT INTO TBL_PROFESOR_TITULO (INT_COD_PROFESOR, INT_COD_TITULO) VALUES (2, 2);
INSERT INTO TBL_PROFESOR_TITULO (INT_COD_PROFESOR, INT_COD_TITULO) VALUES (3, 3);
INSERT INTO TBL_PROFESOR_TITULO (INT_COD_PROFESOR, INT_COD_TITULO) VALUES (4, 4);
INSERT INTO TBL_PROFESOR_TITULO (INT_COD_PROFESOR, INT_COD_TITULO) VALUES (5, 5);
INSERT INTO TBL_PROFESOR_TITULO (INT_COD_PROFESOR, INT_COD_TITULO) VALUES (6, 6);
INSERT INTO TBL_PROFESOR_TITULO (INT_COD_PROFESOR, INT_COD_TITULO) VALUES (7, 7);
INSERT INTO TBL_PROFESOR_TITULO (INT_COD_PROFESOR, INT_COD_TITULO) VALUES (8, 8);
INSERT INTO TBL_PROFESOR_TITULO (INT_COD_PROFESOR, INT_COD_TITULO) VALUES (9, 9);
INSERT INTO TBL_PROFESOR_TITULO (INT_COD_PROFESOR, INT_COD_TITULO) VALUES (10, 10);
INSERT INTO TBL_PROFESOR_TITULO (INT_COD_PROFESOR, INT_COD_TITULO) VALUES (11, 11);
INSERT INTO TBL_PROFESOR_TITULO (INT_COD_PROFESOR, INT_COD_TITULO) VALUES (12, 12);
INSERT INTO TBL_PROFESOR_TITULO (INT_COD_PROFESOR, INT_COD_TITULO) VALUES (13, 13);
INSERT INTO TBL_PROFESOR_TITULO (INT_COD_PROFESOR, INT_COD_TITULO) VALUES (14, 14);
INSERT INTO TBL_PROFESOR_TITULO (INT_COD_PROFESOR, INT_COD_TITULO) VALUES (15, 15);
INSERT INTO TBL_PROFESOR_TITULO (INT_COD_PROFESOR, INT_COD_TITULO) VALUES (16, 16);
INSERT INTO TBL_PROFESOR_TITULO (INT_COD_PROFESOR, INT_COD_TITULO) VALUES (17, 17);
INSERT INTO TBL_PROFESOR_TITULO (INT_COD_PROFESOR, INT_COD_TITULO) VALUES (18, 18);
INSERT INTO TBL_PROFESOR_TITULO (INT_COD_PROFESOR, INT_COD_TITULO) VALUES (19, 19);
INSERT INTO TBL_PROFESOR_TITULO (INT_COD_PROFESOR, INT_COD_TITULO) VALUES (20, 20);
INSERT INTO TBL_PROFESOR_TITULO (INT_COD_PROFESOR, INT_COD_TITULO) VALUES (21, 11);
INSERT INTO TBL_PROFESOR_TITULO (INT_COD_PROFESOR, INT_COD_TITULO) VALUES (22, 12);
INSERT INTO TBL_PROFESOR_TITULO (INT_COD_PROFESOR, INT_COD_TITULO) VALUES (23, 13);
INSERT INTO TBL_PROFESOR_TITULO (INT_COD_PROFESOR, INT_COD_TITULO) VALUES (24, 14);
INSERT INTO TBL_PROFESOR_TITULO (INT_COD_PROFESOR, INT_COD_TITULO) VALUES (25, 15);
INSERT INTO TBL_PROFESOR_TITULO (INT_COD_PROFESOR, INT_COD_TITULO) VALUES (26, 16);
INSERT INTO TBL_PROFESOR_TITULO (INT_COD_PROFESOR, INT_COD_TITULO) VALUES (27, 17);
INSERT INTO TBL_PROFESOR_TITULO (INT_COD_PROFESOR, INT_COD_TITULO) VALUES (28, 18);
INSERT INTO TBL_PROFESOR_TITULO (INT_COD_PROFESOR, INT_COD_TITULO) VALUES (29, 19);
INSERT INTO TBL_PROFESOR_TITULO (INT_COD_PROFESOR, INT_COD_TITULO) VALUES (30, 10);
SELECT * FROM TBL_PROFESOR_TITULO;
GO

INSERT INTO TBL_EMPLEADOS (INT_ID_EMPLEADO, STR_NOMBRE, INT_CEDULA, DTE_FECHA_NACIMIENTO) VALUES (1, 'Juan Pérez', 1234567890, '1990-01-15');
INSERT INTO TBL_EMPLEADOS (INT_ID_EMPLEADO, STR_NOMBRE, INT_CEDULA, DTE_FECHA_NACIMIENTO) VALUES (2, 'María López', 2345678901, '1985-05-20');
INSERT INTO TBL_EMPLEADOS (INT_ID_EMPLEADO, STR_NOMBRE, INT_CEDULA, DTE_FECHA_NACIMIENTO) VALUES (3, 'Pedro Gómez', 3456789012, '1992-11-10');
INSERT INTO TBL_EMPLEADOS (INT_ID_EMPLEADO, STR_NOMBRE, INT_CEDULA, DTE_FECHA_NACIMIENTO) VALUES (4, 'Ana Rodríguez', 4567890123, '1988-07-03');
INSERT INTO TBL_EMPLEADOS (INT_ID_EMPLEADO, STR_NOMBRE, INT_CEDULA, DTE_FECHA_NACIMIENTO) VALUES (5, 'Luisa Martínez', 5678901234, '1995-03-28');
INSERT INTO TBL_EMPLEADOS (INT_ID_EMPLEADO, STR_NOMBRE, INT_CEDULA, DTE_FECHA_NACIMIENTO) VALUES (6, 'Carlos Herrera', 6789012345, '1991-09-12');
INSERT INTO TBL_EMPLEADOS (INT_ID_EMPLEADO, STR_NOMBRE, INT_CEDULA, DTE_FECHA_NACIMIENTO) VALUES (7, 'Laura Torres', 7890123456, '1987-04-25');
INSERT INTO TBL_EMPLEADOS (INT_ID_EMPLEADO, STR_NOMBRE, INT_CEDULA, DTE_FECHA_NACIMIENTO) VALUES (8, 'Mario Sánchez', 8901234567, '1993-12-18');
INSERT INTO TBL_EMPLEADOS (INT_ID_EMPLEADO, STR_NOMBRE, INT_CEDULA, DTE_FECHA_NACIMIENTO) VALUES (9, 'Sofía Jiménez', 9012345678, '1989-08-07');
INSERT INTO TBL_EMPLEADOS (INT_ID_EMPLEADO, STR_NOMBRE, INT_CEDULA, DTE_FECHA_NACIMIENTO) VALUES (10, 'Andrés Castro', 1234509876, '1994-02-22');
SELECT * FROM TBL_EMPLEADOS;
GO

INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (1, 'Ana García', 9876543210);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (2, 'Luis González', 8765432109);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (3, 'María Torres', 7654321098);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (4, 'Juan López', 6543210987);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (5, 'Pedro Martínez', 5432109876);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (6, 'Laura Sánchez', 4321098765);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (7, 'Carlos Rodríguez', 3210987654);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (8, 'Sofía Herrera', 2109876543);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (9, 'Mario Castro', 1098765432);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (10, 'Andrea Jiménez', 0987654321);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (11, 'Fernando Pérez', 9876543210);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (12, 'Julia González', 8765432109);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (13, 'Gabriel Torres', 7654321098);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (14, 'Mariana López', 6543210987);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (15, 'Alejandro Martínez', 5432109876);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (16, 'Valentina Sánchez', 4321098765);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (17, 'Diego Rodríguez', 3210987654);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (18, 'Camila Herrera', 2109876543);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (19, 'Lucas Castro', 1098765432);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (20, 'Isabella Jiménez', 0987654321);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (21, 'Emilio Pérez', 9876543210);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (22, 'Renata González', 8765432109);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (23, 'Maximiliano Torres', 7654321098);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (24, 'Valeria López', 6543210987);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (25, 'Thiago Martínez', 5432109876);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (26, 'Emma Sánchez', 4321098765);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (27, 'Joaquín Rodríguez', 3210987654);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (28, 'Catalina Herrera', 2109876543);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (29, 'Nicolás Castro', 1098765432);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (30, 'Valentina Gómez', 0987654321);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (31, 'Santiago Vargas', 9876543210);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (32, 'Martina Silva', 8765432109);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (33, 'Benjamín Molina', 7654321098);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (34, 'Lucía Torres', 6543210987);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (35, 'Mateo González', 5432109876);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (36, 'Emilia López', 4321098765);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (37, 'Sebastián Ramírez', 3210987654);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (38, 'Isabella Castro', 2109876543);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (39, 'Dylan Morales', 1098765432);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (40, 'Valentina Hernández', 0987654321);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (41, 'Sebastián Vargas', 9876543210);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (42, 'Emma Silva', 8765432109);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (43, 'Joaquín Molina', 7654321098);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (44, 'Isabella Torres', 6543210987);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (45, 'Gabriel González', 5432109876);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (46, 'Valentina López', 4321098765);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (47, 'Thiago Ramírez', 3210987654);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (48, 'Sofía Castro', 2109876543);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (49, 'Lucas Morales', 1098765432);
INSERT INTO TBL_ESTUDIANTES (INT_ID_ESTUDIANTE, STR_NOMBRE, INT_NUMERO_DOCUMENTO) VALUES (50, 'Mía Hernández', 0987654321);
SELECT * FROM TBL_ESTUDIANTES;
GO
--=================Relacionada con: TBL_CURSOS=================

CREATE PROCEDURE sp_BuscarTodasInscripciones
AS
BEGIN
    SET NOCOUNT ON;

    -- Verificar si existen inscripciones
    IF NOT EXISTS (SELECT 1 FROM TBL_INSCRIPCIONES)
    BEGIN
        RAISERROR('No se encontraron inscripciones.', 16, 1);
        RETURN;
    END

    -- Obtener todas las inscripciones
    SELECT INT_COD_INSCRIPCION, INT_ID_EMPLEADO, INT_ID_ESTUDIANTE, INT_COD_EDICION, FLT_VALOR_PAGO, INT_CANTIDAD
    FROM TBL_INSCRIPCIONES;
END
GO
--EXEC sp_BuscarTodasInscripciones;

CREATE PROCEDURE sp_BuscarCursoPorCodigo
(
    @COD_CURSO INT
)
AS
BEGIN
    SET NOCOUNT ON;

    SELECT *
    FROM TBL_CURSOS
    WHERE INT_COD_CURSO = @COD_CURSO;
END
GO
--EXEC sp_BuscarCursoPorCodigo @COD_CURSO = 1;

CREATE PROCEDURE sp_BuscarTodosLosCursos
AS
BEGIN
    SET NOCOUNT ON;

    SELECT *
    FROM TBL_CURSOS;
END
GO
--EXEC sp_BuscarTodosLosCursos;

CREATE PROCEDURE sp_InsertarNuevoCurso
(
    @INT_COD_CURSO INT,
    @STR_TITULO VARCHAR(30),
    @INT_NUMERO_HORAS INT
)
AS
BEGIN
    SET NOCOUNT ON;
    BEGIN TRY
        BEGIN TRANSACTION;

        -- Verificar si el curso ya existe
        IF EXISTS (SELECT 1 FROM TBL_CURSOS WHERE INT_COD_CURSO = @INT_COD_CURSO)
        BEGIN
            RAISERROR('El curso con el código %d ya existe.', 16, 1, @INT_COD_CURSO);
            ROLLBACK;
            RETURN;
        END

        -- Insertar el nuevo curso
        INSERT INTO TBL_CURSOS (INT_COD_CURSO, STR_TITULO, INT_NUMERO_HORAS)
        VALUES (@INT_COD_CURSO, @STR_TITULO, @INT_NUMERO_HORAS);

        COMMIT;
    END TRY
    BEGIN CATCH
        ROLLBACK;
        THROW;
    END CATCH;
END
GO
--EXEC sp_InsertarNuevoCurso @INT_COD_CURSO = 20, @STR_TITULO = 'Nuevo Curso', @INT_NUMERO_HORAS = 10;

CREATE PROCEDURE sp_ModificarCurso
(
    @INT_COD_CURSO INT,
    @STR_TITULO VARCHAR(30),
    @INT_NUMERO_HORAS INT
)
AS
BEGIN
    SET NOCOUNT ON;
    BEGIN TRY
        BEGIN TRANSACTION;

        -- Verificar si el curso existe
        IF NOT EXISTS (SELECT 1 FROM TBL_CURSOS WHERE INT_COD_CURSO = @INT_COD_CURSO)
        BEGIN
            RAISERROR('El curso con el código %d no existe.', 16, 1, @INT_COD_CURSO);
            ROLLBACK;
            RETURN;
        END

        -- Modificar el curso
        UPDATE TBL_CURSOS
        SET STR_TITULO = @STR_TITULO,
            INT_NUMERO_HORAS = @INT_NUMERO_HORAS
        WHERE INT_COD_CURSO = @INT_COD_CURSO;

        COMMIT;
    END TRY
    BEGIN CATCH
        ROLLBACK;
        THROW;
    END CATCH;
END
GO

--EXEC sp_ModificarCurso @INT_COD_CURSO = 20, @STR_TITULO = 'Nuevo Título', @INT_NUMERO_HORAS = 20;

CREATE PROCEDURE sp_EliminarCurso
(
    @INT_COD_CURSO INT
)
AS
BEGIN
    SET NOCOUNT ON;
    BEGIN TRY
        BEGIN TRANSACTION;

        -- Verificar si el curso existe
        IF NOT EXISTS (SELECT 1 FROM TBL_CURSOS WHERE INT_COD_CURSO = @INT_COD_CURSO)
        BEGIN
            RAISERROR('El curso con el código %d no existe.', 16, 1, @INT_COD_CURSO);
            ROLLBACK;
            RETURN;
        END

        -- Eliminar el curso
        DELETE FROM TBL_CURSOS WHERE INT_COD_CURSO = @INT_COD_CURSO;

        COMMIT;
    END TRY
    BEGIN CATCH
        ROLLBACK;
        THROW;
    END CATCH;
END
GO
--EXEC sp_EliminarCurso @INT_COD_CURSO = 20;

--=================Relacionada con: TBL_INSCRIPCIONES=================

CREATE PROCEDURE sp_BuscarInscripcion
(
    @INT_COD_INSCRIPCION INT
)
AS
BEGIN
    SET NOCOUNT ON;

    -- Verificar si la inscripción existe
    IF NOT EXISTS (SELECT 1 FROM TBL_INSCRIPCIONES WHERE INT_COD_INSCRIPCION = @INT_COD_INSCRIPCION)
    BEGIN
        RAISERROR('La inscripción con el código %d no existe.', 16, 1, @INT_COD_INSCRIPCION);
        RETURN;
    END

    -- Obtener los datos de la inscripción
    SELECT INT_COD_INSCRIPCION, INT_ID_EMPLEADO, INT_ID_ESTUDIANTE, INT_COD_EDICION, FLT_VALOR_PAGO, INT_CANTIDAD
    FROM TBL_INSCRIPCIONES
    WHERE INT_COD_INSCRIPCION = @INT_COD_INSCRIPCION;
END
GO
--EXEC sp_BuscarInscripcion @INT_COD_INSCRIPCION = 1;


CREATE PROCEDURE sp_InsertarInscripcion
(
    @INT_ID_EMPLEADO INT,
    @INT_ID_ESTUDIANTE INT,
    @INT_COD_EDICION INT,
    @FLT_VALOR_PAGO MONEY,
    @INT_CANTIDAD INT
)
AS
BEGIN
    SET NOCOUNT ON;
    BEGIN TRY
        BEGIN TRANSACTION;

        -- Verificar si el empleado existe
        IF NOT EXISTS (SELECT 1 FROM TBL_EMPLEADOS WHERE INT_ID_EMPLEADO = @INT_ID_EMPLEADO)
        BEGIN
            RAISERROR('El empleado con el ID %d no existe.', 16, 1, @INT_ID_EMPLEADO);
            ROLLBACK;
            RETURN;
        END

        -- Verificar si el estudiante existe
        IF NOT EXISTS (SELECT 1 FROM TBL_ESTUDIANTES WHERE INT_ID_ESTUDIANTE = @INT_ID_ESTUDIANTE)
        BEGIN
            RAISERROR('El estudiante con el ID %d no existe.', 16, 1, @INT_ID_ESTUDIANTE);
            ROLLBACK;
            RETURN;
        END

        -- Verificar si la edición del curso existe
        IF NOT EXISTS (SELECT 1 FROM TBL_EDICION_CURSOS WHERE INT_COD_EDICION = @INT_COD_EDICION)
        BEGIN
            RAISERROR('La edición del curso con el código %d no existe.', 16, 1, @INT_COD_EDICION);
            ROLLBACK;
            RETURN;
        END

        -- Insertar la nueva inscripción
        INSERT INTO TBL_INSCRIPCIONES (INT_ID_EMPLEADO, INT_ID_ESTUDIANTE, INT_COD_EDICION, FLT_VALOR_PAGO, INT_CANTIDAD)
        VALUES (@INT_ID_EMPLEADO, @INT_ID_ESTUDIANTE, @INT_COD_EDICION, @FLT_VALOR_PAGO, @INT_CANTIDAD);

        COMMIT;
    END TRY
    BEGIN CATCH
        ROLLBACK;
        THROW;
    END CATCH;
END
GO
--EXEC sp_InsertarInscripcion @INT_ID_EMPLEADO = 1, @INT_ID_ESTUDIANTE = 1, @INT_COD_EDICION = 1, @FLT_VALOR_PAGO = 200.00, @INT_CANTIDAD = 1;

CREATE PROCEDURE sp_ModificarInscripcion
(
    @INT_COD_INSCRIPCION INT,
    @FLT_VALOR_PAGO MONEY,
    @INT_CANTIDAD INT
)
AS
BEGIN
    SET NOCOUNT ON;
    BEGIN TRY
        BEGIN TRANSACTION;

        -- Verificar si la inscripción existe
        IF NOT EXISTS (SELECT 1 FROM TBL_INSCRIPCIONES WHERE INT_COD_INSCRIPCION = @INT_COD_INSCRIPCION)
        BEGIN
            RAISERROR('La inscripción con el código %d no existe.', 16, 1, @INT_COD_INSCRIPCION);
            ROLLBACK;
            RETURN;
        END

        -- Modificar la inscripción
        UPDATE TBL_INSCRIPCIONES
        SET FLT_VALOR_PAGO = @FLT_VALOR_PAGO,
            INT_CANTIDAD = @INT_CANTIDAD
        WHERE INT_COD_INSCRIPCION = @INT_COD_INSCRIPCION;

        COMMIT;
    END TRY
    BEGIN CATCH
        ROLLBACK;
        THROW;
    END CATCH;
END
GO
--EXEC sp_ModificarInscripcion @INT_COD_INSCRIPCION = 1, @FLT_VALOR_PAGO = 150.00, @INT_CANTIDAD = 2;

CREATE PROCEDURE sp_EliminarInscripcion
(
    @INT_COD_INSCRIPCION INT
)
AS
BEGIN
    SET NOCOUNT ON;
    BEGIN TRY
        BEGIN TRANSACTION;

        -- Verificar si la inscripción existe
        IF NOT EXISTS (SELECT 1 FROM TBL_INSCRIPCIONES WHERE INT_COD_INSCRIPCION = @INT_COD_INSCRIPCION)
        BEGIN
            RAISERROR('La inscripción con el código %d no existe.', 16, 1, @INT_COD_INSCRIPCION);
            ROLLBACK;
            RETURN;
        END

        -- Eliminar la inscripción
        DELETE FROM TBL_INSCRIPCIONES WHERE INT_COD_INSCRIPCION = @INT_COD_INSCRIPCION;

        COMMIT;
    END TRY
    BEGIN CATCH
        ROLLBACK;
        THROW;
    END CATCH;
END
GO
--EXEC sp_EliminarInscripcion @INT_COD_INSCRIPCION = 1;

--=================Relacionada con: TBL_DETALLE_INSCRIPCION=================

CREATE PROCEDURE sp_BuscarDetalleInscripcion
    @INT_COD_DETALLE_INSCRIPCION INT,
    @FLT_VALOR MONEY OUTPUT,
    @INT_CANTIDAD INT OUTPUT
AS
BEGIN
    SET NOCOUNT ON;

    -- Inicializar las variables de salida
    SET @FLT_VALOR = NULL;
    SET @INT_CANTIDAD = NULL;

    BEGIN TRY
        -- Verificar si el detalle de inscripción existe
        IF NOT EXISTS (SELECT 1 FROM TBL_DETALLE_INSCRIPCION WHERE INT_COD_DETALLE_INSCRIPCION = @INT_COD_DETALLE_INSCRIPCION)
        BEGIN
            THROW 50001, 'El detalle de inscripción no existe.', 1;
        END

        -- Obtener los datos del detalle de inscripción
        SELECT @FLT_VALOR = FLT_VALOR, @INT_CANTIDAD = INT_CANTIDAD
        FROM TBL_DETALLE_INSCRIPCION
        WHERE INT_COD_DETALLE_INSCRIPCION = @INT_COD_DETALLE_INSCRIPCION;
    END TRY
    BEGIN CATCH
        THROW;
    END CATCH;
END
GO
--DECLARE @FLT_VALOR_BUSCADO MONEY;
--DECLARE @INT_CANTIDAD_BUSCADA INT;

--EXEC sp_BuscarDetalleInscripcion @INT_COD_DETALLE_INSCRIPCION = 1, @FLT_VALOR = @FLT_VALOR_BUSCADO OUTPUT, @INT_CANTIDAD = @INT_CANTIDAD_BUSCADA OUTPUT;

--SELECT @FLT_VALOR_BUSCADO AS FLT_VALOR, @INT_CANTIDAD_BUSCADA AS INT_CANTIDAD;

CREATE PROCEDURE sp_BuscarTodosDetallesInscripcion
AS
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        -- Verificar si existen detalles de inscripción
        IF NOT EXISTS (SELECT 1 FROM TBL_DETALLE_INSCRIPCION)
        BEGIN
            THROW 50001, 'No existen detalles de inscripción.', 1;
        END

        -- Obtener todos los detalles de inscripción
        SELECT INT_COD_DETALLE_INSCRIPCION, FLT_VALOR, INT_CANTIDAD
        FROM TBL_DETALLE_INSCRIPCION;
    END TRY
    BEGIN CATCH
        THROW;
    END CATCH;
END
GO
--EXEC sp_BuscarTodosDetallesInscripcion;


CREATE PROCEDURE sp_InsertarDetalleInscripcion
    @INT_COD_DETALLE_INSCRIPCION INT,
    @FLT_VALOR MONEY,
    @INT_CANTIDAD INT
AS
BEGIN
    SET NOCOUNT ON;
    SET XACT_ABORT ON;
    BEGIN TRY
        BEGIN TRANSACTION;

        -- Verificar si el detalle de inscripción ya existe
        IF EXISTS (SELECT 1 FROM TBL_DETALLE_INSCRIPCION WHERE INT_COD_DETALLE_INSCRIPCION = @INT_COD_DETALLE_INSCRIPCION)
        BEGIN
            THROW 50001, 'El detalle de inscripción ya existe.', 1;
        END

        -- Insertar el nuevo detalle de inscripción
        INSERT INTO TBL_DETALLE_INSCRIPCION (INT_COD_DETALLE_INSCRIPCION, FLT_VALOR, INT_CANTIDAD)
        VALUES (@INT_COD_DETALLE_INSCRIPCION, @FLT_VALOR, @INT_CANTIDAD);

        COMMIT TRANSACTION;
    END TRY
    BEGIN CATCH
        ROLLBACK TRANSACTION;
        THROW;
    END CATCH;
END
GO
--EXEC sp_InsertarDetalleInscripcion @INT_COD_DETALLE_INSCRIPCION = 1, @FLT_VALOR = 100.00, @INT_CANTIDAD = 2;

CREATE PROCEDURE sp_ModificarDetalleInscripcion
    @INT_COD_DETALLE_INSCRIPCION INT,
    @FLT_VALOR MONEY,
    @INT_CANTIDAD INT
AS
BEGIN
    SET NOCOUNT ON;
    SET XACT_ABORT ON;
    BEGIN TRY
        BEGIN TRANSACTION;

        -- Verificar si el detalle de inscripción existe
        IF NOT EXISTS (SELECT 1 FROM TBL_DETALLE_INSCRIPCION WHERE INT_COD_DETALLE_INSCRIPCION = @INT_COD_DETALLE_INSCRIPCION)
        BEGIN
            THROW 50001, 'El detalle de inscripción no existe.', 1;
        END

        -- Modificar el detalle de inscripción
        UPDATE TBL_DETALLE_INSCRIPCION
        SET FLT_VALOR = @FLT_VALOR,
            INT_CANTIDAD = @INT_CANTIDAD
        WHERE INT_COD_DETALLE_INSCRIPCION = @INT_COD_DETALLE_INSCRIPCION;

        COMMIT TRANSACTION;
    END TRY
    BEGIN CATCH
        ROLLBACK TRANSACTION;
        THROW;
    END CATCH;
END
GO
--EXEC sp_ModificarDetalleInscripcion @INT_COD_DETALLE_INSCRIPCION = 1, @FLT_VALOR = 150.00, @INT_CANTIDAD = 3;

CREATE PROCEDURE sp_EliminarDetalleInscripcion
    @INT_COD_DETALLE_INSCRIPCION INT
AS
BEGIN
    SET NOCOUNT ON;
    SET XACT_ABORT ON;
    BEGIN TRY
        BEGIN TRANSACTION;

        -- Verificar si el detalle de inscripción existe
        IF NOT EXISTS (SELECT 1 FROM TBL_DETALLE_INSCRIPCION WHERE INT_COD_DETALLE_INSCRIPCION = @INT_COD_DETALLE_INSCRIPCION)
        BEGIN
            THROW 50001, 'El detalle de inscripción no existe.', 1;
        END

        -- Eliminar el detalle de inscripción
        DELETE FROM TBL_DETALLE_INSCRIPCION WHERE INT_COD_DETALLE_INSCRIPCION = @INT_COD_DETALLE_INSCRIPCION;

        COMMIT TRANSACTION;
    END TRY
    BEGIN CATCH
        ROLLBACK TRANSACTION;
        THROW;
    END CATCH;
END
GO
--EXEC sp_EliminarDetalleInscripcion @INT_COD_DETALLE_INSCRIPCION = 1;
